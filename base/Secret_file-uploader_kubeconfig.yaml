apiVersion: v1
data:
  config: 
kind: Secret
metadata:
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:config: {}
      f:type: {}
    manager: kubectl-create
    operation: Update
    time: "2022-04-28T16:17:39Z"
  name: kubeconfig
  namespace: file-uploader
type: Opaque
