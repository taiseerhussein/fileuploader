apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  generateName: file-uploader-example-
  labels:
    tekton.dev/pipeline: file-uploader-example-gfhkf
  managedFields:
  - apiVersion: tekton.dev/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
      f:spec:
        .: {}
        f:params: {}
        f:pipelineSpec:
          .: {}
          f:params: {}
          f:tasks: {}
          f:workspaces: {}
        f:workspaces: {}
    manager: kubectl-create
    operation: Update
    time: "2022-04-26T16:19:54Z"
  - apiVersion: tekton.dev/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:tekton.dev/pipeline: {}
      f:status:
        .: {}
        f:completionTime: {}
        f:conditions: {}
        f:pipelineSpec:
          .: {}
          f:params: {}
          f:tasks: {}
          f:workspaces: {}
        f:startTime: {}
    manager: openshift-pipelines-controller
    operation: Update
    time: "2022-04-26T16:19:54Z"
  name: file-uploader-example-gfhkf
  namespace: file-uploader
spec:
  params:
  - name: src-namespace
    value: guestbook
  - name: src-context
    value: src
  pipelineSpec:
    params:
    - name: src-namespace
      type: string
    - name: src-context
      type: string
    tasks:
    - name: export
      params:
      - name: context
        value: $(params.src-context)
      - name: namespace
        value: $(params.src-namespace)
      taskRef:
        kind: ClusterTask
        name: crane-export
      workspaces:
      - name: export
        subPath: export
        workspace: shared-data
      - name: kubeconfig
        workspace: kubeconfig
    - name: transform
      runAfter:
      - export
      taskRef:
        kind: ClusterTask
        name: crane-transform
      workspaces:
      - name: export
        subPath: export
        workspace: shared-data
      - name: transform
        subPath: transform
        workspace: shared-data
    - name: apply
      runAfter:
      - transform
      taskRef:
        kind: ClusterTask
        name: crane-apply
      workspaces:
      - name: export
        subPath: export
        workspace: shared-data
      - name: transform
        subPath: transform
        workspace: shared-data
      - name: apply
        subPath: apply
        workspace: shared-data
    - name: kustomize
      params:
      - name: dest-namespace
        value: $(context.pipelineRun.namespace)
      runAfter:
      - apply
      taskRef:
        kind: ClusterTask
        name: kustomize-namespace
      workspaces:
      - name: apply
        subPath: apply
        workspace: shared-data
      - name: kustomize
        subPath: kustomize
        workspace: shared-data
    workspaces:
    - name: shared-data
    - name: kubeconfig
  serviceAccountName: pipeline
  timeout: 1h0m0s
  workspaces:
  - name: shared-data
    persistentVolumeClaim:
      claimName: file-uploader-example
  - name: kubeconfig
    secret:
      secretName: kubeconfig
